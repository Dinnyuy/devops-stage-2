version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    environment:
      - NODE_ENV=production

  backend:
    build:
      context: ./backend
    container_name: backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`, `/docs`, `/redoc`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/database

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database

  adminer:
    image: adminer
    container_name: adminer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`localhost`) && PathPrefix(`/adminer`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    ports:
      - "8081:8080"

  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8090:8090"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
